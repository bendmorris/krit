#include "krit/script/ScriptClassGenerated.h"
#include "krit/script/ScriptEngine.h"
#include "krit/script/ScriptValue.h"

{% for enum in enums %}
{% for import in enum.import %}
#include "{{ import }}"
{% endfor %}
{% endfor %}

namespace krit {

void initScriptClasses(ScriptEngine *engine) {
    // register enums
    JSContext *ctx = engine->ctx;
    JSValue globalObj = JS_GetGlobalObject(ctx);
    {% for enum in enums %}
    {
        JSValue e = JS_NewObject(ctx);
        {% for member in enum.members %}
        JS_SetPropertyStr(ctx, e, "{{ member }}", ScriptValue<int>::valueToJs(ctx, {{ enum.namespace }}::{{ enum.name }}::{{ enum.prefix }}{{ member }}));
        {% endfor %}
        JS_SetPropertyStr(ctx, globalObj, "{{ enum.name }}", e);
    }
    {% endfor %}
    JS_FreeValue(ctx, globalObj);

    // initialize all types
    {% for wrapper in wrappers %}
    engine->classId(ScriptClass{{ wrapper.name }});
    {% endfor %}
}

}
